<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        zktoW20PAAAAAElFTkSuQmCC
</value>
  </data>
</root>